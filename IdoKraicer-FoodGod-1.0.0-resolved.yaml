openapi: 3.0.3
info:
  title: FoodGod API
  description: "API documentation for the FoodGod project, a recipe management system."
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/IdoKraicer/FoodGod/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://foodgod.com/api
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register_body'
        required: true
      responses:
        "200":
          description: User registered successfully
        "409":
          description: Username already taken
  /login:
    post:
      summary: User login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
        required: true
      responses:
        "200":
          description: Login successful
        "404":
          description: Invalid credentials
        "409":
          description: A user is already logged in
  /recipes:
    get:
      summary: Fetch a list of random recipes
      parameters:
      - name: amount
        in: query
        description: Number of recipes to fetch (default is 3)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 3
      responses:
        "200":
          description: List of random recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
    post:
      summary: Add a new recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipes_body'
        required: true
      responses:
        "200":
          description: Recipe added successfully
  /recipes/{id}:
    get:
      summary: Fetch detailed information of a recipe by ID
      parameters:
      - name: id
        in: path
        description: Recipe ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Recipe details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeFull'
        "404":
          description: Recipe not found
  /recipes/search:
    get:
      summary: Search recipes with filters
      parameters:
      - name: query
        in: query
        description: Search term
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: diet
        in: query
        description: "Diet filter (e.g., [\"Vegetarian\", \"Vegan\", \"Paleo\"])"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: cuisine
        in: query
        description: Cuisine filter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: intolerances
        in: query
        description: Intolerance filter
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of matching recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "404":
          description: No matching recipes
  /user/{userId}/recipes:
    get:
      summary: Fetch recipes added by the user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of user's recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
  /user/{userId}/favorites:
    get:
      summary: Fetch user's favorite recipes
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
  /user/{userId}/favorites/{recipeId}:
    post:
      summary: Mark a recipe as favorite
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recipeId
        in: path
        description: Recipe ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Recipe added to favorites
components:
  schemas:
    RecipePreview:
      type: object
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: Pasta Carbonara
        image:
          type: string
          example: https://picsum.photos/480/310
        readyInMinutes:
          type: integer
          example: 45
        aggregateLikes:
          type: integer
          example: 209
        vegetarian:
          type: boolean
          example: false
        vegan:
          type: boolean
          example: false
        glutenFree:
          type: boolean
          example: false
        summary:
          type: string
          example: A delicious and classic Italian pasta dish.
    RecipeFull:
      type: object
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: Pasta Carbonara
        ingredients:
          type: array
          example:
          - Pasta
          - Eggs
          - Parmesan
          - Bacon
          items:
            type: string
        instructions:
          type: string
          example: Boil pasta. Fry bacon. Mix all ingredients.
        cuisine:
          type: string
          example: Italian
        diet:
          type: string
          example: Vegetarian
        intolerances:
          type: array
          example:
          - Gluten
          items:
            type: string
        image:
          type: string
          example: https://img.spoonacular.com/recipes/716429-556x370.jpg
        readyInMinutes:
          type: integer
          example: 45
        aggregateLikes:
          type: integer
          example: 209
        summary:
          type: string
          example: A delicious and classic Italian pasta dish.
        analyzedInstructions:
          type: array
          items:
            $ref: '#/components/schemas/RecipeFull_analyzedInstructions'
    register_body:
      required:
      - country
      - email
      - first_name
      - last_name
      - password
      - username
      type: object
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          example: password123
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        country:
          type: string
          example: USA
        email:
          type: string
          format: email
          example: johndoe@example.com
    login_body:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          example: password123
    recipes_body:
      required:
      - ingredients
      - instructions
      - title
      - userId
      type: object
      properties:
        userId:
          type: string
          example: "123"
        title:
          type: string
          example: Pasta Carbonara
        ingredients:
          type: array
          example:
          - Pasta
          - Eggs
          - Parmesan
          - Bacon
          items:
            type: string
        instructions:
          type: string
          example: Boil pasta. Fry bacon. Mix all ingredients.
        cuisine:
          type: string
          example: Italian
        diet:
          type: array
          example:
          - Vegetarian
          - Vegan
          - Paleo
          items:
            type: string
        intolerances:
          type: array
          example:
          - Gluten
          items:
            type: string
    RecipeFull_steps:
      type: object
      properties:
        number:
          type: integer
          example: 1
        step:
          type: string
          example: Cook pasta according to package directions.
    RecipeFull_analyzedInstructions:
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/RecipeFull_steps'
